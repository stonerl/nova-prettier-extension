{
  "1": "",
  "2": "",
  "4": "",
  "50": "",
  "80": "",
  "120": "",
  "General": "",
  "Prettier Module": "",
  "Set a folder containing the Prettier module. If unset, the extension first tries to resolve a workspace-specific installation, or uses the bundled module if 'Prefer Bundled Prettier' is enabled. If neither is available, the bundled module will be used as a fallback.": "",
  "e.g. /opt/homebrew/lib/node_modules/prettier": "",
  "Global Setting": "",
  "Prefer Bundled Prettier": "",
  "Use the bundled Prettier module and plugins instead of resolving from the workspace. This is ignored if a custom Prettier module path is set.": "",
  "Enabled": "",
  "Disabled": "",
  "Prettier Configuration": "",
  "Set a path to a custom Prettier configuration file. If unset, the extension will attempt to resolve one from the workspace or fall back to its own configuration.\n\nOnly files with JSON syntax are supported.": "",
  "e.g. /Users/Prettier/prettierrc": "",
  "Ignore Configuration Files": "",
  "Ignore all configuration files and always use the extension's configuration. This is ignored if a custom Prettier configuration file is set.": "",
  "Advanced Syntax Detection": "",
  "When enabled, Prettier⁺ will supplement Nova’s syntax detection with file‑extension fallback to choose the correct syntax. When disabled, it trusts Nova’s syntax detection only.": "",
  "Log Debug Information": "",
  "Send debug information to the Extension Console.": "",
  "Prettier": "",
  "Used for remote files, when no configuration file is found, or when configuration files are ignored.": "",
  "Print Width": "",
  "Specify the line length that the printer will wrap on.": "",
  "Tab Width": "",
  "Specify the number of spaces per indentation-level.": "",
  "Tabs": "",
  "Indent lines with tabs instead of spaces.": "",
  "Semicolons": "",
  "Print semicolons at the ends of statements.": "",
  "Single Quotes": "",
  "Use single quotes instead of double quotes.": "",
  "Quote Props": "",
  "Change when properties in objects are quoted.": "",
  "as-needed": "",
  "consistent": "",
  "preserve": "",
  "JSX Single Quotes": "",
  "Use single quotes instead of double quotes in JSX.": "",
  "Trailing Commas": "",
  "Print trailing commas wherever possible in multi-line comma-separated syntactic structures. (A single-line array, for example, never gets trailing commas.)": "",
  "all": "",
  "es5": "",
  "none": "",
  "Bracket Spacing": "",
  "Print spaces between brackets in object literals.": "",
  "Object Wrap": "",
  "Configure how Prettier wraps object literals when they could fit on one line or span multiple lines.": "",
  "collapse": "",
  "Bracket Line": "",
  "Put the > of a multi-line HTML (HTML, JSX, Vue, Angular) element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).": "",
  "Arrow Function Parentheses": "",
  "Include parentheses around a sole arrow function parameter.": "",
  "always": "",
  "avoid": "",
  "Require Pragma": "",
  "Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to Prettier.": "",
  "Insert Pragma": "",
  "Prettier can insert a special @format marker at the top of files specifying that the file has been formatted with Prettier. This works well when used in tandem with the above Require Pragma option. If there is already a docblock at the top of the file then this option will add a newline to it with the @format marker.": "",
  "Check Ignore Pragma": "",
  "Prettier can allow individual files to opt out of formatting if they contain a special comment, called a pragma, at the top of the file.": "",
  "Prose Wrap": "",
  "By default, Prettier will not change wrapping in markdown text since some services use a linebreak-sensitive renderer, e.g. GitHub comments and BitBucket. To have Prettier wrap prose to the print width, change this option to \"always\". If you want Prettier to force all prose blocks to be on a single line and rely on editor/viewer soft wrapping instead, you can use \"never\".": "",
  "never": "",
  "HTML Whitespace Sensitivity": "",
  "Specify the global whitespace sensitivity for HTML, Vue, Angular, and Handlebars. See Prettier documentation for more info.": "",
  "css": "",
  "strict": "",
  "ignore": "",
  "Vue files script and style tags indentation": "",
  "Whether or not to indent the code inside <script> and <style> tags in Vue files.": "",
  "End of Line": "",
  "Specifies the newline control character.": "",
  "lf": "",
  "crlf": "",
  "cr": "",
  "auto": "",
  "Embedded Language Formatting": "",
  "Control whether Prettier formats quoted code embedded in the file.": "",
  "off": "",
  "Single Attribute Per Line": "",
  "Enforce single attribute per line in HTML, Vue, and JSX.": "",
  "Prettier Plugins": "",
  "Configure the bundled plugins.": "",
  "@prettier/plugin-php": "",
  "PHP formatter plugin for Prettier": "",
  "Plugin Enabled": "",
  "Plugin Status": "",
  "Select whether to use global settings, enable, or disable the plugin.": "",
  "PHP Version": "",
  "Allows specifying the PHP version to use. The default setting 'auto', attempts to auto-detect the supported PHP version from a 'composer.json' file in the project folder. If not found or not able to be parsed, it will default to the latest supported PHP version.": "",
  "5.0": "",
  "5.1": "",
  "5.2": "",
  "5.3": "",
  "5.4": "",
  "5.5": "",
  "5.6": "",
  "7.0": "",
  "7.1": "",
  "7.2": "",
  "7.3": "",
  "7.4": "",
  "8.0": "",
  "8.1": "",
  "8.2": "",
  "8.3": "",
  "8.4": "",
  "Same as in Prettier.": "",
  "Same as in Prettier. The default is '4' based on the 'PSR-2' coding standard.": "",
  "If enabled, strings that use double quotes but do not rely on the features they add, will be reformatted.": "",
  "If enabled, trailing commas will be added wherever possible. If disabled, no trailing commas are printed.": "",
  "Brace Style": "",
  "If set to 'per-cs', prettier will move open brace for code blocks (classes, functions and methods) onto new line. If set to '1tbs', prettier will move open brace for code blocks (classes, functions and methods) onto same line.": "",
  "per-cs": "",
  "1tbs": "",
  "@prettier/plugin-xml": "",
  "XML formatter plugin for Prettier": "",
  "Quote Attributes": "",
  "Quote style for XML attributes.": "",
  "double": "",
  "single": "",
  "Self Closing Space": "",
  "Adds a space before self-closing tags.": "",
  "Sort Attributes by Key": "",
  "Orders XML attributes by key alphabetically while prioritizing xmlns attributes.": "",
  "Whitespace Sensitivity": "",
  "You may want 'ignore' or 'preserve', see the info.": "",
  "prettier-plugin-astro": "",
  "Astro formatter plugin for Prettier": "",
  "Allow Shorthand": "",
  "Enable/disable attribute shorthand if attribute name and expression are the same.": "",
  "Skip Frontmatter": "",
  "Skips the formatting of the frontmatter.": "",
  "prettier-plugin-blade": "",
  "Blade formatter plugin for Prettier": "",
  "Attribute Wrapping": "",
  "Controls how attributes in Blade templates are wrapped across lines.": "",
  "force": "",
  "force-aligned": "",
  "force-expand-multiline": "",
  "aligned-multiple": "",
  "preserve-aligned": "",
  "Minimum Attributes to Wrap": "",
  "Minimum number of html tag attributes for force wrap attribute options. Wrap the first attribute only if 'force-expand-multiline' is specified in wrap attributes.": "",
  "End with Newline": "",
  "Adds a newline at the end of the formatted output.": "",
  "Sort Tailwind Classes": "",
  "Sort Tailwind CSS classes automatically.": "",
  "Tailwind Config": "",
  "Path to a custom Tailwind CSS config file. Only used when 'Sort Tailwind Classes' is enabled.": "",
  "e.g. ./styles/tailwind.config.js": "",
  "HTML Attribute Sorting": "",
  "Controls the order in which HTML attributes are sorted.": "",
  "alphabetical": "",
  "code-guide": "",
  "idiomatic": "",
  "vuejs": "",
  "custom": "",
  "Custom Attribute Order": "",
  "Comma-separated list defining the custom order of HTML attributes. Only applies when 'HTML Attribute Sorting' is set to 'custom'. Regex patterns are supported.": "",
  "e.g. id, aria-.+, class, src": "",
  "Disable PHP Syntax Check": "",
  "Skips running a PHP syntax check before formatting Blade templates.": "",
  "Indent Inner HTML": "",
  "Indents the content inside <head> and <body> tags.": "",
  "Extra Newlines Before Tags": "",
  "Comma-separated list of tag names that should be preceded by an extra newline.": "",
  "head,body,/html": "",
  "PHP Trailing Commas": "",
  "Adds trailing commas in PHP expressions where possible. If disabled, no trailing commas will be printed.": "",
  "Specifies the PHP version used for parsing Blade expressions. Affects syntax compatibility and formatting behavior.": "",
  "Component Prefixes": "",
  "Comma-separated list of component prefixes used to preserve attribute formatting.": "",
  "x-,livewire:": "",
  "prettier-plugin-ejs": "",
  "EJS markup formatter plugin for Prettier": "",
  "Used only if 'prettier-plugin-tailwindcss' is disabled or Tailwind sorting is not enabled for the 'HTML (EJS)' syntax.": "",
  "Select whether to use global settings, enable, or disable the plugin.\n\nUsed only if 'prettier-plugin-tailwindcss' is disabled or Tailwind sorting is not enabled for the 'HTML (EJS)' syntax.": "",
  "prettier-plugin-ejs-tailwindcss": "",
  "EJS template formatter and Tailwind CSS class sorting plugin for Prettier": "",
  "Requires both 'prettier-plugin-tailwindcss' and Tailwind sorting enabled for the 'HTML (EJS)' syntax.": "",
  "Select whether to use global settings, enable, or disable the plugin.\n\nRequires both 'prettier-plugin-tailwindcss' and Tailwind sorting enabled for the 'HTML (EJS)' syntax.": "",
  "prettier-plugin-java": "",
  "Java formatter plugin for Prettier": "",
  "prettier-plugin-liquid": "",
  "Liquid formatter plugin for Prettier": "",
  "Liquid Single Quotes": "",
  "Use single quotes instead of double quotes in Liquid tag and objects.": "",
  "Embedded Single Quotes": "",
  "Use single quotes instead of double quotes in embedded languages (JavaScript, CSS, TypeScript inside <script>, <style> or Liquid equivalent).": "",
  "Capture Whitespace Sensitivity": "",
  "Specify the default whitespace sensitivity of the 'capture' Liquid tag.": "",
  "Single Line Link Tags": "",
  "If enabled, will print <link> tags on a single line to remove clutter.": "",
  "Indent Schema": "",
  "If enabled, will indent the contents of the {% schema %} tag.": "",
  "prettier-plugin-nginx": "",
  "NGINX configuration files formatter plugin for Prettier": "",
  "Align Directives": "",
  "Align directive parameters within a block to the same column.": "",
  "Align Universally": "",
  "Align all directive parameters within a file to the same column.": "",
  "Wrap Parameters": "",
  "Wrap parameters to new lines to fit print width.": "",
  "Continuation Indent": "",
  "Additional indentation for wrapped lines.": "",
  "prettier-plugin-properties": "",
  "Prettier plugin for .properties files": "",
  "Escape Non-Latin-1 Characters": "",
  "Escape with \\u all non-Latin-1 characters, to allow safely encoding output as ISO-8859-1.": "",
  "Key Separator": "",
  "Set the separator to use between a property key and its value.": "",
  "\" \"": "",
  "\":\"": "",
  "\"=\"": "",
  "\": \"": "",
  "\"= \"": "",
  "\" : \"": "",
  "\" = \"": "",
  "prettier-plugin-sql": "",
  "SQL formatter plugin for Prettier": "",
  "Formatter": "",
  "Specifies the formatter to use for SQL code formatting.": "",
  "sql-formatter": "",
  "node-sql-parser": "",
  "Options for sql-formatter": "",
  "Language": "",
  "Sets the SQL dialect used for formatting. Choose 'Auto-Detect' to infer the dialect from the file extension (e.g., .pgsql → PostgreSQL, .sqlite → SQLite). Defaults to 'Generic SQL' if detection fails or the dialect is unsupported.": "",
  "Auto-Detect": "",
  "GCP BigQuery": "",
  "IBM DB2": "",
  "IBM DB2i (experimental)": "",
  "Apache Hive": "",
  "MariaDB": "",
  "MySQL": "",
  "TiDB": "",
  "Couchbase N1QL": "",
  "Oracle PL/SQL": "",
  "PostgreSQL": "",
  "Amazon Redshift": "",
  "SingleStoreDB": "",
  "Snowflake": "",
  "Spark": "",
  "Generic SQL": "",
  "SQLite": "",
  "SQL Server Transact-SQL": "",
  "Trino / Presto": "",
  "Keyword Case": "",
  "Uppercases or lowercases keywords.": "",
  "upper": "",
  "lower": "",
  "Data Type Case": "",
  "Uppercases or lowercases data types.": "",
  "Function Case": "",
  "Uppercases or lowercases function names.": "",
  "Identifier Case": "",
  "Uppercases or lowercases identifiers. (experimental!)": "",
  "Logical Operator Newline": "",
  "Newline before or after boolean operator (AND, OR, XOR).": "",
  "before": "",
  "after": "",
  "Expression Width": "",
  "Maximum number of characters in parenthesized expressions to be kept on single line.": "",
  "Lines Between Queries": "",
  "How many newlines to insert between queries.": "",
  "Dense Operators": "",
  "Packs operators densely without spaces.": "",
  "Newline Before Semicolon": "",
  "Places semicolon on separate line.": "",
  "Parameter": "",
  "Specifies parameter values to fill in for placeholders inside SQL.": "",
  "{}": "",
  "Parameter Types": "",
  "Specifies parameter types to support when parsing SQL prepared statements.": "",
  "Options for node-sql-parser": "",
  "Sets the SQL dialect used for parsing. Choose 'Auto-Detect' to infer the dialect from the file extension (e.g., .pgsql → PostgreSQL). Defaults to 'MySQL' if detection fails or the dialect is unsupported.": "",
  "FlinkSQL": "",
  "Type": "",
  "Specifies whether to focus on tables or columns for parsing and formatting in SQL queries.": "",
  "table": "",
  "column": "",
  "prettier-plugin-tailwindcss": "",
  "Tailwind CSS class sorting plugin for Prettier": "",
  "Specifies the Tailwind JavaScript config path.": "",
  "Tailwind Stylesheet": "",
  "Specifies the Tailwind stylesheet path.": "",
  "e.g. ./resources/css/app.css": "",
  "Non-Standard Attributes": "",
  "Sorting order for non-standard attributes.": "",
  "Functions and Templates": "",
  "Sorting order for classes in function calls and tagged template literals.": "",
  "Preserve Whitespace": "",
  "If enabled, preserves original whitespace between classes. If disabled, removes unnecessary whitespace between classes for consistent formatting.": "",
  "Preserve Duplicate Classes": "",
  "If enabled, preserves duplicate classes when classes and templating syntax can’t be distinguished (e.g., in Fluid or Blade). If disabled, removes duplicate classes automatically for cleaner output.": "",
  "Syntaxes": "",
  "Syntaxes where Tailwind CSS class sorting should be applied.": "",
  "Astro": "",
  "HTML": "",
  "HTML (EJS)": "",
  "HTML (Liquid)": "",
  "JavaScript": "",
  "JSX": "",
  "TSX": "",
  "TypeScript": "",
  "prettier-plugin-toml": "",
  "TOML formatter plugin fot Prettier": "",
  "Align Entries": "",
  "Align consecutive entries vertically.": "",
  "Align Comments": "",
  "Align consecutive comments after entries and items vertically. This applies to comments that are after entries or array items.": "",
  "Auto Expand Arrays": "",
  "Expand arrays to multiple lines that exceed the maximum column width.": "",
  "Auto Collapse Arrays": "",
  "Collapse arrays that don't exceed the maximum column width and don't contain comments.": "",
  "Compact Arrays": "",
  "Omit white space padding from single-line arrays.": "",
  "Compact Inline Tables": "",
  "Omit white space padding from the start and end of inline tables.": "",
  "Compact Entries": "",
  "Omit white space around '='.": "",
  "Indent Tables": "",
  "Indent based on tables and arrays of tables and their subtables, subtables out of order are not indented.": "",
  "Indent Entries": "",
  "Indent entries under tables.": "",
  "Reorder Keys": "",
  "Alphabetically reorder keys that are not separated by empty lines.": "",
  "Blank Lines": "",
  "The maximum number of allowed blank lines between entries and tables.": "",
  "prettier-plugin-twig": "",
  "Twig formatter plugin for Prettier": "",
  "Use single quotes in Twig files.": "",
  "Break Objects": "",
  "Should objects always break in Twig files.": "",
  "Follow Official Coding Standards": "",
  "Follow the offical coding standards exactly. If disabled, some slight deviations might occur, such as spaces around the filter operator (e.g. 's | upper' instead of 's|upper').": "",
  "Output Endblock Name": "",
  "Choose whether to output the block name in {% endblock %} tags (e.g., {% endblock content %}) or not.": "",
  "Multi-Tags": "",
  "A sequences of non-standard Twig tags that should be treated as belonging together.": "",
  "Test Expressions": "",
  "Make custom Twig tests known to the parser.": "",
  "Format on Save": "",
  "Automatically format documents when they are saved.": "",
  "Ignore Without Config": "",
  "When enabled, documents without a Prettier configuration file will not be formatted on save.": "",
  "Ignore Remote Documents": "",
  "When enabled, remote documents will be ignored during format on save.": "",
  "Ignored Syntaxes": "",
  "Documents that are set to an ignored syntax will not be formatted when saved.": "",
  "Ignore": "",
  "Blade": "",
  "CSS": "",
  "Flow": "",
  "GraphQL": "",
  "HTML (ERB)": "",
  "Java": "",
  "Java Properties": "",
  "JSON": "",
  "Less": "",
  "Markdown": "",
  "Markdown (Liquid)": "",
  "NGINX": "",
  "PHP": "",
  "SCSS": "",
  "SQL": "",
  "TOML": "",
  "Twig": "",
  "Vue": "",
  "XML": "",
  "YAML": "",
  "The Swiss Army knife for formatting — fast, reliable, and built on Prettier.": "",
  "Format Document": "",
  "Format Selection": "",
  "Format Document (Forced)": "",
  "Save Without Formatting": "",
  "Restart Prettier Service": "",
  "Reset Syntax Warnings": "",
  "Prettier⁺ Help": ""
}
